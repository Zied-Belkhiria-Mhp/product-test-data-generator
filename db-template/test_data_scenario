{"_id":{"$oid":"61f101ba5e67f34c196f33a0"},"name":"BMW_Test_2","version":"1.0","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: BMWVehicleDemo1;\\r\\nVersion: 1.0;\\r\\n\\r\\nEntities:\\r\\n    Entity:\\r\\n        Name: Dismantler\\r\\n        Version: 0.1.1\\r\\n        As: Dismantler;\\r\\n    Entity:\\r\\n        Name: EndOfLife\\r\\n        Version: 0.1.1\\r\\n        As: EndOfLife;\\r\\n    Entity:\\r\\n        Name: ManufacturerDocumentation\\r\\n        Version: 0.1.1\\r\\n        As: ManufacturerDocumentation;\\r\\n    Entity:\\r\\n        Name: ManufacturerDocumentationSimple\\r\\n        Version: 0.1.1\\r\\n        As: ManufacturerDocumentationSimple;\\r\\n    Entity:\\r\\n        Name: Material\\r\\n        Version: 0.1.1\\r\\n        As: Material;\\r\\n    Entity:\\r\\n        Name: Nameplate\\r\\n        Version: 0.1.1\\r\\n        As: Nameplate;\\r\\n    Entity:\\r\\n        Name: ProductDescription\\r\\n        Version: 0.1.1\\r\\n        As: ProductDescription;\\r\\n    Entity:\\r\\n        Name: ProductDescriptionBattery\\r\\n        Version: 0.1.1\\r\\n        As: ProductDescriptionBattery;\\r\\n    Entity:\\r\\n        Name: ProductDescriptionVehicle\\r\\n        Version: 0.1.1\\r\\n        As: ProductDescriptionVehicle;\\r\\n    Entity:\\r\\n        Name: ProductUsage\\r\\n        Version: 0.1.1\\r\\n        As: ProductUsage;\\r\\n    Entity:\\r\\n        Name: ProductUsageBattery\\r\\n        Version: 0.1.1\\r\\n        As: ProductUsageBattery;\\r\\n    Entity:\\r\\n        Name: ProductUsageVehicle\\r\\n        Version: 0.1.1\\r\\n        As: ProductUsageVehicle;\\r\\n    Entity:\\r\\n        Name: QualityAlert\\r\\n        Version: 0.1.1\\r\\n        As: QualityAlert;\\r\\n    Entity:\\r\\n        Name: ReturnRequest\\r\\n        Version: 0.1.1\\r\\n        As: ReturnRequest;\\r\\n    Entity:\\r\\n        Name: TechnicalData\\r\\n        Version: 0.1.1\\r\\n        As: TechnicalData;\\r\\n    Entity:\\r\\n        Name: Traceability\\r\\n        Version: 0.1.1\\r\\n        As: Traceability;\\r\\n\\r\\nGenerate Dismantler times 5 As: dismantlers;\\r\\nGenerate EndOfLife times 5 As: eols;\\r\\nGenerate ManufacturerDocumentation times 5 As: docs;\\r\\nGenerate ManufacturerDocumentationSimple times 5 As: docsSimple;\\r\\nGenerate Material times 5 As: materials;\\r\\nGenerate Nameplate times 5 As: nameplates;\\r\\n\\r\\nGenerate ProductDescription times 5 As: prodDescriptions;\\r\\nGenerate ProductDescriptionBattery times 5 As: prodDescriptionsBattery;\\r\\nGenerate ProductDescriptionVehicle times 5 As: prodDescriptionsVehicle;\\r\\n\\r\\nGenerate ProductUsage times 5 As: prodUsages;\\r\\nGenerate ProductUsageBattery times 5 As: prodUsagesBattery;\\r\\nGenerate ProductUsageVehicle times 5 As: prodUsagesVehicle;\\r\\n\\r\\nGenerate QualityAlert times 5 As: alerts;\\r\\nGenerate ReturnRequest times 5 As: returnRequests;\\r\\nGenerate TechnicalData times 5 As: techData;\\r\\nGenerate Traceability times 5 As: trace;\\r\\n\\r\\nFor Each materials As: m \\r\\nDo;\\r\\n\\r\\nDone;\\r\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f1078a5e67f34c196f33a1"},"name":"BMW_Test_2","version":"1.1","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: BMWVehicleDemo1;\\nVersion: 1.1;\\n\\nEntities:\\n    Entity:\\n        Name: Dismantler\\n        Version: 0.1.1\\n        As: Dismantler;\\n    Entity:\\n        Name: EndOfLife\\n        Version: 0.1.1\\n        As: EndOfLife;\\n    Entity:\\n        Name: ManufacturerDocumentation\\n        Version: 0.1.1\\n        As: ManufacturerDocumentation;\\n    Entity:\\n        Name: ManufacturerDocumentationSimple\\n        Version: 0.1.1\\n        As: ManufacturerDocumentationSimple;\\n    Entity:\\n        Name: Material\\n        Version: 0.1.1\\n        As: Material;\\n    Entity:\\n        Name: Nameplate\\n        Version: 0.1.1\\n        As: Nameplate;\\n    Entity:\\n        Name: ProductDescription\\n        Version: 0.1.1\\n        As: ProductDescription;\\n    Entity:\\n        Name: ProductDescriptionBattery\\n        Version: 0.1.1\\n        As: ProductDescriptionBattery;\\n    Entity:\\n        Name: ProductDescriptionVehicle\\n        Version: 0.1.1\\n        As: ProductDescriptionVehicle;\\n    Entity:\\n        Name: ProductUsage\\n        Version: 0.1.1\\n        As: ProductUsage;\\n    Entity:\\n        Name: ProductUsageBattery\\n        Version: 0.1.1\\n        As: ProductUsageBattery;\\n    Entity:\\n        Name: ProductUsageVehicle\\n        Version: 0.1.1\\n        As: ProductUsageVehicle;\\n    Entity:\\n        Name: QualityAlert\\n        Version: 0.1.1\\n        As: QualityAlert;\\n    Entity:\\n        Name: ReturnRequest\\n        Version: 0.1.1\\n        As: ReturnRequest;\\n    Entity:\\n        Name: TechnicalData\\n        Version: 0.1.1\\n        As: TechnicalData;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n\\nGenerate Dismantler times 5 As: dismantlers;\\nGenerate EndOfLife times 5 As: eols;\\nGenerate ManufacturerDocumentation times 5 As: docs;\\nGenerate ManufacturerDocumentationSimple times 5 As: docsSimple;\\nGenerate Material times 5 As: materials;\\nGenerate Nameplate times 5 As: nameplates;\\n\\nGenerate ProductDescription times 5 As: prodDescriptions;\\nGenerate ProductDescriptionBattery times 5 As: prodDescriptionsBattery;\\nGenerate ProductDescriptionVehicle times 5 As: prodDescriptionsVehicle;\\n\\nGenerate ProductUsage times 5 As: prodUsages;\\nGenerate ProductUsageBattery times 5 As: prodUsagesBattery;\\nGenerate ProductUsageVehicle times 5 As: prodUsagesVehicle;\\n\\nGenerate QualityAlert times 5 As: alerts;\\nGenerate ReturnRequest times 5 As: returnRequests;\\nGenerate TechnicalData times 5 As: techData;\\nGenerate Traceability times 5 As: trace;\\n\\nFor Each eols As: eol \\nDo;\\n    eol.disassemblyStatus \\u003d \\u0027assembled\\u0027;\\nDone;\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f108e85e67f34c196f33a2"},"name":"EOL","version":"1.0","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: EOL_Test;\\nVersion: 1.0;\\n\\nEntities:\\n    Entity:\\n        Name: EndOfLife\\n        Version: 0.1.1\\n        As: EndOfLife;\\n\\nGenerate EndOfLife times 5 As: eols;\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f10b585e67f34c196f33a3"},"name":"EOL","version":"1.1","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: EOL_Test;\\nVersion: 1.1;\\n\\nEntities:\\n    Entity:\\n        Name: EndOfLife\\n        Version: 0.1.1\\n        As: EndOfLife;\\n\\nGenerate EndOfLife times 5 As: eols;\\n\\nFor Each eols As: eol \\nDo;\\n    Set eol.certificateOfDestruction \\u003d true;\\n    Set eol.disassemblyStatus \\u003d \\\"assembled\\\";\\n    Set eol.certificateOfDestruction \\u003d \\\"false\\\";\\nDone;\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f10ba25e67f34c196f33a4"},"name":"EOL","version":"1.2","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: EOL_Test;\\nVersion: 1.2;\\n\\nEntities:\\n    Entity:\\n        Name: EndOfLife\\n        Version: 0.1.1\\n        As: EndOfLife;\\n\\nGenerate EndOfLife times 3 As: aseols;\\nGenerate EndOfLife times 3 As: dieols;\\n\\nFor Each aseols As: eol \\nDo;\\n    Set eol.disassemblyStatus \\u003d \\\"assembled\\\";\\n    Set eol.certificateOfDestruction \\u003d \\\"false\\\";\\nDone;\\n\\nFor Each dieols As: eol  \\nDo;\\n    Set eol.certificateOfDestruction \\u003d \\\"true\\\";\\n    Set eol.disassemblyStatus \\u003d \\\"disassembled\\\";\\nDone;\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f10cde5e67f34c196f33a5"},"name":"EOL","version":"1.3","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: EOL_Test;\\nVersion: 1.3;\\n\\nEntities:\\n    Entity:\\n        Name: EndOfLife\\n        Version: 0.1.1\\n        As: EndOfLife;\\n\\nGenerate EndOfLife times 3 As: aseols;\\nGenerate EndOfLife times 3 As: dieols;\\n\\nFor Each aseols As: eol \\nDo;\\n    Set eol.disassemblyStatus \\u003d \\\"assembled\\\";\\n    Set eol.certificateOfDestruction \\u003d \\\"false\\\";\\n    \\n    Set eol.dateOfReceptionGMT \\u003d Random Date;\\n    Set eol.dateOfDissamblyGMT \\u003d Random Date;\\n    Set eol.dateOfScrappingGMT \\u003d Random Date;\\nDone;\\n\\nFor Each dieols As: eol  \\nDo;\\n    Set eol.certificateOfDestruction \\u003d \\\"true\\\";\\n    Set eol.disassemblyStatus \\u003d \\\"disassembled\\\";\\n    \\n    Set eol.dateOfReceptionGMT \\u003d Random Date;\\n    Set eol.dateOfDissamblyGMT \\u003d Random Date;\\n    Set eol.dateOfScrappingGMT \\u003d Random Date;\\nDone;\\n\\nInstance EndOfLife As: eol1;\\nSet eol1.disassemblyStatus \\u003d \\\"assembled\\\";\\nSet eol1.certificateOfDestruction \\u003d \\\"false\\\";\\nSet eol1.sparePartQuality \\u003d \\\"A\\\";\\nSet eol1.recyclingStatus \\u003d \\\"not recycled\\\";\\nSet eol1.healthStatus \\u003d \\\"in running condition\\\";\\nSet eol1.dateOfReceptionGMT \\u003d Random Date;\\nSet eol1.dateOfDissamblyGMT \\u003d Random Date;\\nSet eol1.dateOfScrappingGMT \\u003d Random Date;\\n\\nInstance EndOfLife As: eol2 from template eoltest 1.0;\\nInstance EndOfLife As: eol3 from template eoltest 1.0;\\nInstance EndOfLife As: eol4 from template eoltest 1.0;\\n\\nSet eol4.dateOfReceptionGMT \\u003d Random Date;\\nSet eol4.dateOfDissamblyGMT \\u003d Random Date;\\nSet eol4.dateOfScrappingGMT \\u003d Random Date;\\n\\nSet eol4.healthStatus \\u003d \\\"in running condition\\\";\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f144d15e67f34c196f33ab"},"name":"Traceability","version":"1.0","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: Traceability;\\nVersion: 1.0;\\n\\nEntities:\\n    Entity:\\n        Name: BusinessPartner\\n        Version: 0.0.1\\n        As: BusinessPartner;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n        \\nInstance BusinessPartner As: bmwgroup;\\nInstance BusinessPartner As: bmwplant1;\\nInstance BusinessPartner As: bmwplant2;\\n\\nSet bmwgroup.bpn \\u003d \\\"CXBPNBMWGROUP\\\";\\nSet bmwgroup.name \\u003d \\\"BMW Group\\\";\\nSet bmwgroup.parent \\u003d \\\"\\\";\\n\\nSet bmwplant1.bpn \\u003d \\\"CXBPNBMWDGF\\\";\\nSet bmwplant1.name \\u003d \\\"BMW Plant Dingolfing\\\";\\nSet bmwplant1.parent \\u003d bmwgroup.bpn;\\n\\nSet bmwplant2.bpn \\u003d \\\"CXBPNBMWLPZ\\\";\\nSet bmwplant2.name \\u003d \\\"BMW Plant Leipzig\\\";\\nSet bmwplant2.parent \\u003d bmwgroup.bpn;\\n\\nInstance Traceability As: t1;\\nSet t1.qualityAlertData \\u003d null;\\n\\nVar id \\u003d t1.individualData;\\nSet id.productionCountryCode \\u003d \\\"DE\\\";\\nSet id.productionDateGMT \\u003d Random Date;\\nSet t1.individualData \\u003d id;\\n\\nVar ud \\u003d t1.uniqueData;\\nSet ud.customerUniqueID \\u003d bmwgroup.bpn;\\nSet ud.manufacturerUniqueID \\u003d bmwplant1.bpn;\\nSet ud.uniqueID \\u003d Random Number between 10000 and 60000;\\nSet t1.uniqueData \\u003d ud;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f14c2c5e67f34c196f33ac"},"name":"Traceability","version":"1.1","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: Traceability;\\nVersion: 1.1;\\n\\nEntities:\\n    Entity:\\n        Name: BusinessPartner\\n        Version: 0.0.1\\n        As: BusinessPartner;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n        \\nInstance BusinessPartner As: bmwgroup;\\nInstance BusinessPartner As: bmwplant1;\\nInstance BusinessPartner As: bmwplant2;\\n\\nSet bmwgroup.bpn \\u003d \\\"CXBPNBMWGROUP\\\";\\nSet bmwgroup.name \\u003d \\\"BMW Group\\\";\\nSet bmwgroup.parent \\u003d \\\"\\\";\\n\\nSet bmwplant1.bpn \\u003d \\\"CXBPNBMWDGF\\\";\\nSet bmwplant1.name \\u003d \\\"BMW Plant Dingolfing\\\";\\nSet bmwplant1.parent \\u003d bmwgroup.bpn;\\n\\nSet bmwplant2.bpn \\u003d \\\"CXBPNBMWLPZ\\\";\\nSet bmwplant2.name \\u003d \\\"BMW Plant Leipzig\\\";\\nSet bmwplant2.parent \\u003d bmwgroup.bpn;\\n\\nGenerate Traceability times 5 As: ts;\\n\\nFor Each ts As: t \\nDo;\\n    Set t.qualityAlertData \\u003d null;\\n    \\n    Var id \\u003d t.individualData;\\n    Set id.productionCountryCode \\u003d \\\"DE\\\";\\n    Set id.productionDateGMT \\u003d Random Date;\\n    Set t.individualData \\u003d id;\\n\\n    Var ud \\u003d t.uniqueData;\\n    Set ud.customerUniqueID \\u003d bmwgroup.bpn;\\n    Set ud.manufacturerUniqueID \\u003d bmwplant1.bpn;\\n    Set ud.uniqueID \\u003d Random Number between 10000 and 60000;\\n    Set t.uniqueData \\u003d ud;\\nDone;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f14ddb5e67f34c196f33ad"},"name":"Traceability","version":"1.2","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: Traceability;\\nVersion: 1.3;\\n\\nEntities:\\n    Entity:\\n        Name: BusinessPartner\\n        Version: 0.0.1\\n        As: BusinessPartner;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n    Entity:\\n        Name: Material\\n        Version: 0.1.1\\n        As: Material;\\n    Entity:\\n        Name: TechnicalData\\n        Version: 0.1.1\\n        As: TechnicalData;\\n        \\nInstance BusinessPartner As: bmwgroup;\\nInstance BusinessPartner As: bmwplant1;\\nInstance BusinessPartner As: bmwplant2;\\n\\nSet bmwgroup.bpn \\u003d \\\"CXBPNBMWGROUP\\\";\\nSet bmwgroup.name \\u003d \\\"BMW Group\\\";\\nSet bmwgroup.parent \\u003d \\\"\\\";\\n\\nSet bmwplant1.bpn \\u003d \\\"CXBPNBMWDGF\\\";\\nSet bmwplant1.name \\u003d \\\"BMW Plant Dingolfing\\\";\\nSet bmwplant1.parent \\u003d bmwgroup.bpn;\\n\\nSet bmwplant2.bpn \\u003d \\\"CXBPNBMWLPZ\\\";\\nSet bmwplant2.name \\u003d \\\"BMW Plant Leipzig\\\";\\nSet bmwplant2.parent \\u003d bmwgroup.bpn;\\n\\nGenerate Traceability times 5 As: ts;\\n\\nFor Each ts As: t \\nDo;\\n    Instance Material As: m;\\n    Set m.materialName \\u003d \\\"Copper\\\";\\n    \\n    Instance TechnicalData As: td;\\n    \\n    \\n    Set t.qualityAlertData \\u003d null;\\n    \\n    Var id \\u003d t.individualData;\\n    Set id.productionCountryCode \\u003d \\\"DE\\\";\\n    Set id.productionDateGMT \\u003d Random Date;\\n    Set t.individualData \\u003d id;\\n\\n    Var ud \\u003d t.uniqueData;\\n    Set ud.customerUniqueID \\u003d bmwgroup.bpn;\\n    Set ud.manufacturerUniqueID \\u003d bmwplant1.bpn;\\n    Set ud.uniqueID \\u003d Random Number between 10000 and 60000;\\n    Set t.uniqueData \\u003d ud;\\nDone;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61f25f8f5e67f34c196f33af"},"name":"BusinessPartner","version":"1.0","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: BusinessPartner;\\nVersion: 1.0;\\n\\nEntities:\\n    Entity:\\n        Name: BusinessPartner\\n        Version: 0.1.1\\n        As: BusinessPartner;\\n        \\nInstance BusinessPartner As: bp1 from template BusinessPartner 0.1.1;\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"61fa3a98065f3b4b15117612"},"name":"BusinessPartner","version":"0.1","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: BusinessPartner;\\nVersion: 1.0;\\n\\nEntities:\\n    Entity:\\n        Name: BusinessPartner\\n        Version: 0.1.1\\n        As: BusinessPartner;\\n        \\nInstance BusinessPartner As: bp1 from template BusinessPartner 0.0.2;\\nInstance BusinessPartner As: bp2 from template BusinessPartner 0.0.2;\\n\\nSet bp1.bpn \\u003d \\\"CAXL1234890ZZ\\\";\\nSet bp2.bpn \\u003d \\\"CAXS1234891ZZ\\\";\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"6203b16efefcab2c27638f32"},"name":"UC_Quality","version":"1.0","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: UC_Quality;\\nVersion: 1.0;\\n\\nEntities:\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n        \\nGenerate Traceability times 5 As: t;\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"6229fd8f799a050ecb27a54d"},"name":"Traceability","version":"1.3","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: Traceability;\\nVersion: 1.3;\\n\\nEntities:\\n    Entity:\\n        Name: BPDM\\n        Version: 1.1.0\\n        As: BusinessPartner;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n    Entity:\\n        Name: SerialPartTypization\\n        Version: 1.0.0\\n        As: SerialPartTypization\\n    Entity:\\n        Name: AssemblyPartRelationship\\n        Version: 1.0.0\\n        As: AssemblyPartRelationship\\n    Entity:\\n        Name: Material\\n        Version: 0.1.1\\n        As: Material;\\n    Entity:\\n        Name: TechnicalData\\n        Version: 0.1.1\\n        As: TechnicalData;\\n        \\nInstance BusinessPartner As: catena from template bp_catena 1.0;\\nInstance BusinessPartner As: aft from template bp_aft 1.0;\\nInstance BusinessPartner As: botek from template bp_botek 1.0;\\nInstance BusinessPartner As: bold from template bp_bold 1.0;\\nInstance BusinessPartner As: buetema from template bp_buetema 1.0;\\nInstance BusinessPartner As: botham from template bp_botham 1.0;\\n\\nInstance BusinessPartner As: bmw from template bp_bmw 1.0;\\n\\n\\nGenerate AssemblyPartRelationship times 5 As: vehicles;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"622a180e57f4a87ea7d7019a"},"name":"Traceability","version":"1.4","scriptType":"DSL","scriptStatus":"PRODUCTIVE","content":"\"Name: Traceability;\\nVersion: 1.4;\\n\\nEntities:\\n    Entity:\\n        Name: BPDM\\n        Version: 1.1.0\\n        As: BusinessPartner;\\n    Entity:\\n        Name: Traceability\\n        Version: 0.1.1\\n        As: Traceability;\\n    Entity:\\n        Name: SerialPartTypization\\n        Version: 1.0.0\\n        As: SerialPartTypization\\n    Entity:\\n        Name: AssemblyPartRelationship\\n        Version: 1.0.0\\n        As: AssemblyPartRelationship\\n    Entity:\\n        Name: Material\\n        Version: 0.1.1\\n        As: Material;\\n    Entity:\\n        Name: TechnicalData\\n        Version: 0.1.1\\n        As: TechnicalData;\\n\\nInstance BusinessPartner As: bmw from template bp_bmw 1.0;\\n\\nGenerate Traceability times 1 As: vehicles;\\n\\n\\nFor Each vehicles As: vehicle\\nDo;\\n    Instance AssemblyPartRelationship As: apr from template apr 1.0;\\n    Instance SerialPartTypization As: spr from template spt_vehicle 1.0;\\n    \\n    Set apr.catenaXId \\u003d Random Uuid;\\n    Set apr.catenaXId \\u003d \\\"Guenther\\\";\\n    Var childParts \\u003d apr.childParts;\\n    Var quantity \\u003d childParts.quantity;\\n    \\n    Set quantity.quantityNumber \\u003d 7;\\n    \\n    Set childParts.quantity \\u003d quantity;\\n    Set apr.childParts \\u003d childParts;\\n    \\n    Instance AssemblyPartRelationship As: apr_hvb from template apr 1.0;\\n    Instance SerialPartTypization As: spr_hvb from template spt_hvb 1.0;\\n    \\n    Generate AssemblyPartRelationship times 6 As: apr_cellmodules;\\n    For Each apr_cellmodules As: apr_cellmodule\\n    Do;\\n        Instance SerialPartTypization As: spr_cellmodule from template spt_hvb 1.0;\\n        Generate AssemblyPartRelationship times 10 As: apr_cells;\\n        For Each apr_cells As: apr_cell\\n        Do;\\n            Set apr_cell.childParts \\u003d apr.childParts;\\n        Done;\\n    Done;\\nDone;\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"622a3e4b3568166f98349b84"},"name":"jstest","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// Name: jstest\n// Version: 1.0\n\nvar BusinessPartner = scenario.getSchema('BPDM', '1.1.0');\n// var bmw = scenario.generateTestData(BusinessPartner, 'bp_bmw', '1.0');\n\n// var Traceability = scenario.getSchema('Traceability', '0.1.1');\nvar SerialPartTypization = scenario.getSchema('SerialPartTypization', '1.0.0');\nvar AssemblyPartRelationship = scenario.getSchema('AssemblyPartRelationship', '1.0.0');\n// var Material = scenario.getSchema('Material', '0.1.1');\n// var TechnicalData = scenario.getSchema('TechnicalData', '0.1.1');\n\nvar cellUuid = rand.getUuid();\n\nvar vehicleQuantity = 1;\nvar moduleQuantity  = 6;\nvar cellQuantity    = 10;\n\nfor(var i = 0; i < vehicleQuantity; i++) {\n        var spr_vehicle = scenario.generateTestData(SerialPartTypization, 'spt_vehicle', '1.0');\n        var spr_hvb = scenario.generateTestData(SerialPartTypization, 'spt_hvb', '1.0');\n        var spr_cellmodule = scenario.generateTestData(SerialPartTypization, 'spt_cellmodule', '1.0');\n\n        var van = rand.getVan();\n        spr_vehicle.get('localIdentifiers').get(2).put('value', van);\n        spr_vehicle.get('localIdentifiers').get(3).put('value', van);\n\n        var apr_vehicle = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n\n        apr_vehicle.put('catenaXId', spr_vehicle.get('catenaXId'));\n        \n        var apr_hvb = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        \n        apr_hvb.put('catenaXId', spr_hvb.get('catenaXId'));\n        apr_vehicle.get('childParts').get(0).put('childCatenaXId', apr_hvb.get('catenaXId'));\n        \n        apr_hvb.get('childParts').get(0).get('quantity').put('quantityNumber', moduleQuantity);\n        \n        var apr_cellmodule = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        apr_cellmodule.put('catenaXId', spr_cellmodule.get('catenaXId'));\n        apr_hvb.get('childParts').get(0).put('childCatenaXId', apr_cellmodule.get('catenaXId'));\n        \n        apr_cellmodule.get('childParts').get(0).get('quantity').put('quantityNumber', cellQuantity);\n        apr_cellmodule.get('childParts').get(0).put('childCatenaXId', cellUuid);\n    \n};\n\n\n\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"622b03c6ecc2f53375e0ac59"},"name":"jstest","version":"1.1","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// Name: jstest\n// Version: 1.1\n\nvar BusinessPartner = scenario.getSchema('BPDM', '1.1.0');\n// var bmw = scenario.generateTestData(BusinessPartner, 'bp_bmw', '1.0');\n\n// var Traceability = scenario.getSchema('Traceability', '0.1.1');\nvar SerialPartTypization = scenario.getSchema('SerialPartTypization', '1.0.0');\nvar AssemblyPartRelationship = scenario.getSchema('AssemblyPartRelationship', '1.0.0');\n// var Material = scenario.getSchema('Material', '0.1.1');\n// var TechnicalData = scenario.getSchema('TechnicalData', '0.1.1');\n\nvar cellUuid = rand.getUuid();\n\nvar vehicleQuantity = 10;\nvar hvbQuantity = 1;\nvar moduleQuantity  = 6;\nvar cellQuantity    = 10;\n\nfor(var i = 0; i < vehicleQuantity; i++) {\n        var spr_vehicle = scenario.generateTestData(SerialPartTypization, 'spt_vehicle', '1.0');\n\n        var van = rand.getVan();\n        spr_vehicle.get('localIdentifiers').get(2).put('value', van);\n        spr_vehicle.get('localIdentifiers').get(3).put('value', van);\n\n        var uuid = rand.getUuid();\n        spr_vehicle.put('catenaXId', uuid);\n        var apr_vehicle = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        apr_vehicle.put('catenaXId', spr_vehicle.get('catenaXId'));\n        \n        var moduleChild = apr_vehicle.get('childParts').get(0);\n        apr_vehicle.get('childParts').remove(0);\n\n        for(var h = 0; h < hvbQuantity; h++) {\n            var hvbUuid = rand.getUuid();\n            var hvbSerialNo = rand.getSerialNoAlphaNum(28);\n            \n            var moduleChildInst = cloneElement(moduleChild);\n            moduleChildInst.put('childCatenaXId', hvbUuid);\n            apr_vehicle.get('childParts').put(moduleChildInst);\n            \n            var spr_hvb = scenario.generateTestData(SerialPartTypization, 'spt_hvb', '1.0');\n            var apr_hvb = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        \n            spr_hvb.get('localIdentifiers').get(2).put('value', hvbSerialNo);\n        \n            spr_hvb.put('catenaXId', hvbUuid);\n            apr_hvb.put('catenaXId', spr_hvb.get('catenaXId'));\n            // apr_vehicle.get('childParts').get(0).put('childCatenaXId', apr_hvb.get('catenaXId'));\n            \n            apr_hvb.get('childParts').get(0).get('quantity').put('quantityNumber', 1);\n            \n            var hvb_child = apr_hvb.get('childParts').get(0);\n            apr_hvb.get('childParts').remove(0);\n            \n            for(var j = 0; j < moduleQuantity; j++) {\n                var cellModuleUuid = rand.getUuid();\n                var cellModuleSerialNo = rand.getSerialNoNum(28);\n            \n                var spr_cellmodule = scenario.generateTestData(SerialPartTypization, 'spt_cellmodule', '1.0');\n                var apr_cellmodule = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n                \n                spr_cellmodule.get('localIdentifiers').get(2).put('value', cellModuleSerialNo);\n                \n                spr_cellmodule.put('catenaXId', cellModuleUuid);\n                apr_cellmodule.put('catenaXId', spr_cellmodule.get('catenaXId'));\n                // apr_hvb.get('childParts').get(0).put('childCatenaXId', apr_cellmodule.get('catenaXId'));\n                \n                // apr_cellmodule.get('childParts').get(0).get('quantity').put('quantityNumber', 1);\n                // apr_cellmodule.get('childParts').get(0).put('childCatenaXId', cellUuid);\n\n                var hvb_child_j = cloneElement(hvb_child); // Object.assign({}, hvb_child);\n                hvb_child_j.put('childCatenaXId', cellModuleUuid);\n                apr_hvb.get('childParts').put(hvb_child_j);\n                // apr_hvb.get('childParts').get(j).put('childCatenaXId', cellModuleUuid);\n                \n                \n                var cellmodule_child = apr_cellmodule.get('childParts').get(0);\n                apr_cellmodule.get('childParts').remove(0);\n                \n                for(var k = 0; k < cellQuantity; k++) {\n                    var cellUuid = rand.getUuid();\n                    var cellModuleChild = cloneElement(cellmodule_child);\n                    cellModuleChild.put('childCatenaXId', cellUuid);\n                    apr_cellmodule.get('childParts').put(cellModuleChild);\n                }\n            }\n        }\n}\n\n\n\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"62305689ecc2f53375e0ac78"},"name":"ucqualityjs","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: ucqualityjs\n// Version: 1.0\n\nvar test = scenario.generateFromTemplate('testdata', 'spt_vehicle', '1.0');\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"6231b63c4476382f44681f77"},"name":"aas","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: aas\n// Version: 1.0\n\n// aas schema currently produces inf-loop\n// var AAS = scenario.getSchema('AAS', '3.0');\n\nvar a1 = scenario.generateFromTemplate('http://catenax.com/schema/AAS/3.0', 'aas', '1.0');\n\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"623ad63b465c590cd2fb4930"},"name":"pdtest","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: pdtest\n// Version: 1.0\n\nvar ProductDescription = scenario.getSchema('ProductDescription', '1.0.0');\nvar MaterialForRecycling = scenario.getSchema('MaterialForRecycling', '1.0.0');\n\n\n\nvar pd1 = scenario.generateTestData(ProductDescription);\nvar mfr = scenario.generateTestData(MaterialForRecycling);\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"623ade10c9489c4ac09e8ee0"},"name":"cetest","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: cetest\n// Version: 1.0\n\nscenario.setAutoAddTestdata(false);\n\nvar BusinessPartner = scenario.getSchema('BPDM', '1.1.0');\n// var bmw = scenario.generateTestData(BusinessPartner, 'bp_bmw', '1.0');\n\n// var Traceability = scenario.getSchema('Traceability', '0.1.1');\nvar SerialPartTypization = scenario.getSchema('SerialPartTypization', '1.0.0');\nvar AssemblyPartRelationship = scenario.getSchema('AssemblyPartRelationship', '1.0.0');\n// var Material = scenario.getSchema('Material', '0.1.1');\n// var TechnicalData = scenario.getSchema('TechnicalData', '0.1.1');\n\nvar ProductDescription = scenario.getSchema('ProductDescription', '1.0.0');\nvar MaterialForRecycling = scenario.getSchema('MaterialForRecycling', '1.0.0');\n\nvar cellUuid = rand.getUuid();\n\nvar vehicleQuantity = 10;\nvar hvbQuantity = 1;\nvar moduleQuantity  = 6;\nvar cellQuantity    = 10;\n\nfor(var i = 0; i < vehicleQuantity; i++) {\n        var spr_vehicle = scenario.generateTestData(SerialPartTypization, 'spt_vehicle', '1.0');\n\n        var van = rand.getVan();\n        spr_vehicle.get('localIdentifiers').get(2).put('value', van);\n        spr_vehicle.get('localIdentifiers').get(3).put('value', van);\n\n        var uuid = rand.getUuid();\n        spr_vehicle.put('catenaXId', uuid);\n        var apr_vehicle = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        apr_vehicle.put('catenaXId', spr_vehicle.get('catenaXId'));\n        \n        var moduleChild = apr_vehicle.get('childParts').get(0);\n        apr_vehicle.get('childParts').remove(0);\n        \n        var pd_vehicle = scenario.generateTestData(ProductDescription);\n        var mf_vehicle = scenario.generateTestData(MaterialForRecycling);\n        \n        var con_vehicle = scenario.generateTestDataContainer(uuid);\n        scenario.addToContainer(con_vehicle, apr_vehicle, AssemblyPartRelationship);\n        scenario.addToContainer(con_vehicle, spr_vehicle, SerialPartTypization);\n\n        for(var h = 0; h < hvbQuantity; h++) {\n            var hvbUuid = rand.getUuid();\n            var hvbSerialNo = rand.getSerialNoAlphaNum(28);\n            \n            var moduleChildInst = cloneElement(moduleChild);\n            moduleChildInst.put('childCatenaXId', hvbUuid);\n            apr_vehicle.get('childParts').put(moduleChildInst);\n            \n            var spr_hvb = scenario.generateTestData(SerialPartTypization, 'spt_hvb', '1.0');\n            var apr_hvb = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n        \n            spr_hvb.get('localIdentifiers').get(2).put('value', hvbSerialNo);\n        \n            spr_hvb.put('catenaXId', hvbUuid);\n            apr_hvb.put('catenaXId', spr_hvb.get('catenaXId'));\n            // apr_vehicle.get('childParts').get(0).put('childCatenaXId', apr_hvb.get('catenaXId'));\n            \n            apr_hvb.get('childParts').get(0).get('quantity').put('quantityNumber', 1);\n            \n            var hvb_child = apr_hvb.get('childParts').get(0);\n            apr_hvb.get('childParts').remove(0);\n            \n            var pd_hvb = scenario.generateTestData(ProductDescription);\n            var mf_hvb = scenario.generateTestData(MaterialForRecycling);\n            \n            for(var j = 0; j < moduleQuantity; j++) {\n                var cellModuleUuid = rand.getUuid();\n                var cellModuleSerialNo = rand.getSerialNoNum(28);\n            \n                var spr_cellmodule = scenario.generateTestData(SerialPartTypization, 'spt_cellmodule', '1.0');\n                var apr_cellmodule = scenario.generateTestData(AssemblyPartRelationship, 'apr', '1.0');\n                \n                spr_cellmodule.get('localIdentifiers').get(2).put('value', cellModuleSerialNo);\n                \n                spr_cellmodule.put('catenaXId', cellModuleUuid);\n                apr_cellmodule.put('catenaXId', spr_cellmodule.get('catenaXId'));\n                // apr_hvb.get('childParts').get(0).put('childCatenaXId', apr_cellmodule.get('catenaXId'));\n                \n                // apr_cellmodule.get('childParts').get(0).get('quantity').put('quantityNumber', 1);\n                // apr_cellmodule.get('childParts').get(0).put('childCatenaXId', cellUuid);\n\n                var hvb_child_j = cloneElement(hvb_child); // Object.assign({}, hvb_child);\n                hvb_child_j.put('childCatenaXId', cellModuleUuid);\n                apr_hvb.get('childParts').put(hvb_child_j);\n                // apr_hvb.get('childParts').get(j).put('childCatenaXId', cellModuleUuid);\n                \n                \n                var cellmodule_child = apr_cellmodule.get('childParts').get(0);\n                apr_cellmodule.get('childParts').remove(0);\n                \n                var pd_cellmodule = scenario.generateTestData(ProductDescription);\n                var mf_cellmodule = scenario.generateTestData(MaterialForRecycling);\n                \n                for(var k = 0; k < cellQuantity; k++) {\n                    var cellUuid = rand.getUuid();\n                    var cellModuleChild = cloneElement(cellmodule_child);\n                    cellModuleChild.put('childCatenaXId', cellUuid);\n                    apr_cellmodule.get('childParts').put(cellModuleChild);\n                    \n                    var pd_cell = scenario.generateTestData(ProductDescription);\n                    var mf_cell = scenario.generateTestData(MaterialForRecycling);\n                }\n            }\n        }\n}\n\n\n\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"623b5cd0c9489c4ac09e8eea"},"name":"cetest","version":"1.1","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: cetest\n// Version: 1.1\n\nscenario.setAutoAddTestdata(false);\n\nscenario.generateFromVehicleTemplate(\"VehicleTemplateElectric1\", \"1.0\");\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"6240ae2b0ce00101106f8a47"},"name":"VechicleTemplateElectric1","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: VechicleTemplateElectric1\n// Version: 1.0\n\nscenario.setAutoAddTestdata(false);\n\nscenario.generateFromVehicleTemplate(\"VehicleTemplateElectric1\", \"1.0\");\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"6240ae420ce00101106f8a48"},"name":"VechicleTemplateHybrid1","version":"1.0","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: VechicleTemplateHybrid1\n// Version: 1.0\n\nscenario.setAutoAddTestdata(false);\n\nscenario.generateFromVehicleTemplate(\"VehicleTemplateHybrid1\", \"1.0\");\n","_class":"com.catenax.tdm.model.TestDataScenario"}
{"_id":{"$oid":"624a57e76171076d1a9b846f"},"name":"VehicleTemplateHybrid1","version":"1.1","scriptType":"JavaScript","scriptStatus":"PRODUCTIVE","content":"// javascript \n// Name: VehicleTemplateHybrid1\n// Version: 1.1\n\nscenario.setAutoAddTestdata(false);\n// scenario.setAutoAddAas(\"aas\", \"1.0\");\n\nscenario.generateFromVehicleTemplate(\"VehicleTemplateHybrid1\", \"1.1\");\n","_class":"com.catenax.tdm.model.TestDataScenario"}
