"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[390],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return n?a.createElement(f,o(o({ref:t},l),{},{components:n})):a.createElement(f,o({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4912:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],c={sidebar_position:2,title:"Domain Specific Language (DSL)"},s=void 0,u={unversionedId:"testdata-scenario/DSL",id:"testdata-scenario/DSL",title:"Domain Specific Language (DSL)",description:"Summary",source:"@site/docs/testdata-scenario/DSL.md",sourceDirName:"testdata-scenario",slug:"/testdata-scenario/DSL",permalink:"/product-test-data-generator/docs/testdata-scenario/DSL",editUrl:"https://github.com/catenax-ng/product-test-data-generator/edit/main/docs/testdata-scenario/DSL.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Domain Specific Language (DSL)"},sidebar:"tutorialSidebar",previous:{title:"Testdata Scenario Documentation",permalink:"/product-test-data-generator/docs/testdata-scenario"},next:{title:"Testdata Scenarios (JavaScript)",permalink:"/product-test-data-generator/docs/testdata-scenario/java-script"}},l={},p=[{value:"Summary",id:"summary",level:2},{value:"Examples",id:"examples",level:2}],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"summary"},"Summary"),(0,i.kt)("p",null,"This method allows for a simple, no/low-code variation of instanciation of mostly synthetic or manually enriched test data."),(0,i.kt)("p",null,"It is implemented via antlr vor domain specific languages. For the language definition, please see ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/catenax-ng/product-test-data-generator/blob/main/tdg/src/main/antlr4/com/catenax/tdm/scenario/TestDataScenario.g4"},"here"),".\nThe source of this language is within the domain of this product and can therefore be changed according to future needs and requirements."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Simple example to instanciate 5 Traceability items, completely synthetical according to the defined schema:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Name: UC_Quality;\nVersion: 1.0;\n\nEntities:\n    Entity:\n        Name: Traceability\n        Version: 0.1.1\n        As: Traceability;\n        \nGenerate Traceability times 5 As: t;\n")),(0,i.kt)("p",null,"More complex example to instanciate and manipulate items:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},'Name: Traceability;\nVersion: 1.3;\n\nEntities:\n    Entity:\n        Name: BusinessPartner\n        Version: 0.0.1\n        As: BusinessPartner;\n    Entity:\n        Name: Traceability\n        Version: 0.1.1\n        As: Traceability;\n    Entity:\n        Name: Material\n        Version: 0.1.1\n        As: Material;\n    Entity:\n        Name: TechnicalData\n        Version: 0.1.1\n        As: TechnicalData;\n        \nInstance BusinessPartner As: bmwgroup;\nInstance BusinessPartner As: bmwplant1;\nInstance BusinessPartner As: bmwplant2;\n\nSet bmwgroup.bpn = "CXBPNBMWGROUP";\nSet bmwgroup.name = "BMW Group";\nSet bmwgroup.parent = "";\n\nSet bmwplant1.bpn = "CXBPNBMWDGF";\nSet bmwplant1.name = "BMW Plant Dingolfing";\nSet bmwplant1.parent = bmwgroup.bpn;\n\nSet bmwplant2.bpn = "CXBPNBMWLPZ";\nSet bmwplant2.name = "BMW Plant Leipzig";\nSet bmwplant2.parent = bmwgroup.bpn;\n\nGenerate Traceability times 5 As: ts;\n\nFor Each ts As: t \nDo;\n    Instance Material As: m;\n    Set m.materialName = "Copper";\n    \n    Instance TechnicalData As: td;\n    \n    \n    Set t.qualityAlertData = null;\n    \n    Var id = t.individualData;\n    Set id.productionCountryCode = "DE";\n    Set id.productionDateGMT = Random Date;\n    Set t.individualData = id;\n\n    Var ud = t.uniqueData;\n    Set ud.customerUniqueID = bmwgroup.bpn;\n    Set ud.manufacturerUniqueID = bmwplant1.bpn;\n    Set ud.uniqueID = Random Number between 10000 and 60000;\n    Set t.uniqueData = ud;\nDone;\n')))}d.isMDXComponent=!0}}]);