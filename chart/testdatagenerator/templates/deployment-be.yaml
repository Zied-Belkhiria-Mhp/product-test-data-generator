apiVersion: apps/v1
kind: Deployment
metadata:
  name: be-{{ template "testdatagenerator.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "testdatagenerator.be.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "testdatagenerator.be.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: tdg
          image: {{ .Values.backend.image }}
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
              {{ if eq .Values.mongo.enabled true }}
            - name: TDG_DB_HOSTNAME
              value: "{{ .Values.mongo.host.name }}"
            - name: TDG_DB_PORT
              value: "{{ .Values.mongo.host.port }}"
            - name: TDG_DB_NAME
              value: "{{ .Values.mongo.database }}"
            - name: TDG_DB_USERNAME
              value: "{{ .Values.mongodb.auth.rootUser }}"
            - name: TDG_DB_PASSWORD
              value: "{{ .Values.mongodb.auth.rootPassword }}"
              {{ else }}
            - name: TDG_DB_HOSTNAME
              value: "{{ .Values.mongo.host.name }}"
            - name: TDG_DB_PORT
              value: "{{ .Values.mongo.host.port }}"
            - name: TDG_DB_NAME
              value: "{{ .Values.mongo.database }}"
            - name: TDG_DB_USERNAME
              value: "{{ .Values.mongodb.auth.rootUser }}"
            - name: TDG_DB_PASSWORD
              value: "{{ .Values.mongodb.auth.rootPassword }}"
              {{ end }}
            - name: TDG_API_KEY
              value: "{{ .Values.backend.apikey }}"
            - name: TDG_HOST_SECURE
              value: "true"
            - name: TDG_HOST_NAME
              value: "{{ .Values.ingress.hostname }}"
            - name: TDG_HOST_PORT
              value: "8080"
          command: [ "echo", "SUCCESS FROM TDG" ]

              