namespaceOverride: product-test-data-generator

ingress:
  hostname: tdg.int.demo.catena-x.net

backend:
  image: ghcr.io/catenax-ng/product-test-data-generator/tdg:main
  endpoint: /api
  apikey: <path:test-data-generator/data/api#key>

frontend:
  image: ghcr.io/catenax-ng/product-test-data-generator/tdg-admin-ui:main

mongodb:
  enabled: true
  global:
    namespaceOverride: product-test-data-generator
  fullnameOverride: db-product-test-data-generator
  hostname: db-product-test-data-generator
  database: tdg
  architecture: standalone
  useStatefulSet: true
  auth:
    rootUser: <path:test-data-generator/data/mongodb#adminusername>
    rootPassword: <path:test-data-generator/data/mongodb#adminpassword>
    usernames: 
      - <path:test-data-generator/data/mongodb#tdgusername>
    passwords: 
      - <path:test-data-generator/data/mongodb#tdgpassword>
    databases:
      - tdg
  persistence:
    enabled: true
  extraVolumes:
    - name: db-template
      configMap:
        name: cm-dbload-{{ .Values.namespaceOverride }}
        items:
        - key: import.sh
          path: import.sh
        - key: test_data_scenario.json
          path: test_data_scenario.json
        - key: test_data_template.json
          path: test_data_template.json
        - key: test_meta_model.json
          path: test_meta_model.json

keycloak:
  enabled: false
  url: <path:test-data-generator/data/iam#url>
  realm: <path:test-data-generator/data/iam#realm>
  client: <path:test-data-generator/data/iam#client>
  secret: <path:test-data-generator/data/iam#secret>
  fullnameOverride: tdg-iam
  auth:
    adminUser: test
    adminPassword: test
    tls:
      enabled: true
      autoGenerated: true
      usePem: false
  replicaCount: 1
  containerPorts:
    http: 8080
    https: 8443
    management: 9990
  service:
    ports:
      http: 9000
      https: 9001
  proxyAddressForwarding: true
  ingress:
    enabled: true
    hostname: tdg-iam.int.demo.catena-x.net
    path: /
    servicePort: http
    ingressClassName: "nginx"
    tls: true
    selfSigned: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: https://tdg-iam.int.demo.catena-x.net
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
      nginx.ingress.kubernetes.io/use-regex: "true"
  postgresql:
    enabled: true
  serviceAccount:
    create: true
  autoscaling:
    enabled: false

